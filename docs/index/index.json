{"includedArchiveIdentifiers":["org.cocoapods.AtomicXCore"],"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleuserviewmodel\/battleuser","title":"battleUser","type":"property"},{"path":"\/documentation\/atomicxcore\/battleuserviewmodel\/rect","title":"rect","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleuserviewmodel\/init","title":"init","type":"method"}],"path":"\/documentation\/atomicxcore\/battleuserviewmodel","title":"BattleUserViewModel","type":"class"},{"path":"\/documentation\/atomicxcore\/c2csettingstore","title":"C2CSettingStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostuser\/connectionuser","title":"connectionUser","type":"property"},{"path":"\/documentation\/atomicxcore\/cohostuser\/hasaudiostream","title":"hasAudioStream","type":"property"},{"path":"\/documentation\/atomicxcore\/cohostuser\/hasvideostream","title":"hasVideoStream","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostuser\/init","title":"init","type":"method"}],"path":"\/documentation\/atomicxcore\/cohostuser","title":"CoHostUser","type":"class"},{"path":"\/documentation\/atomicxcore\/contactliststore","title":"ContactListStore","type":"class"},{"path":"\/documentation\/atomicxcore\/conversationliststore","title":"ConversationListStore","type":"class"},{"path":"\/documentation\/atomicxcore\/groupsettingstore","title":"GroupSettingStore","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecoreview\/didmovetowindow()","title":"didMoveToWindow","type":"method"}],"path":"\/documentation\/atomicxcore\/livecoreview","title":"LiveCoreView","type":"class"},{"path":"\/documentation\/atomicxcore\/loginstore","title":"LoginStore","type":"class"},{"path":"\/documentation\/atomicxcore\/messageliststore","title":"MessageListStore","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/signalvideoview\/didmovetowindow()","title":"didMoveToWindow","type":"method"}],"path":"\/documentation\/atomicxcore\/signalvideoview","title":"SignalVideoView","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/hasaudiostream","title":"hasAudioStream","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/hasvideostream","title":"hasVideoStream","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/namecard","title":"nameCard","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/none","title":"none","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/userrole","title":"userRole","type":"property"}],"path":"\/documentation\/atomicxcore\/userinfomodifyflag","title":"UserInfoModifyFlag","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattleended(battleinfo:)","title":"onBattleEndedWithBattleInfo:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestaccept(battleid:inviter:invitee:)","title":"onBattleRequestAcceptWithBattleId:inviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestcancelled(battleid:inviter:invitee:)","title":"onBattleRequestCancelledWithBattleId:inviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestreceived(battleid:inviter:invitee:)","title":"onBattleRequestReceivedWithBattleId:inviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestreject(battleid:inviter:invitee:)","title":"onBattleRequestRejectWithBattleId:inviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequesttimeout(battleid:inviter:invitee:)","title":"onBattleRequestTimeoutWithBattleId:inviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlescorechanged(battleid:battleuserlist:)","title":"onBattleScoreChangedWithBattleId:battleUserList:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlestarted(battleinfo:)","title":"onBattleStartedWithBattleInfo:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onuserexitbattle(battleid:battleuser:)","title":"onUserExitBattleWithBattleId:battleUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onuserjoinbattle(battleid:battleuser:)","title":"onUserJoinBattleWithBattleId:battleUser:","type":"method"}],"path":"\/documentation\/atomicxcore\/battleobserver","title":"BattleObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onconnectedroomsupdated(hostuserlist:)","title":"onConnectedRoomsUpdatedWithHostUserList:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onconnectedusersupdated(userlist:joinlist:leavelist:)","title":"onConnectedUsersUpdatedWithUserList:joinList:leaveList:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionaccepted(hostuser:)","title":"onCrossRoomConnectionAcceptedWithHostUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectioncancelled(hostuser:)","title":"onCrossRoomConnectionCancelledWithHostUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionexited(hostuser:)","title":"onCrossRoomConnectionExitedWithHostUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionrejected(hostuser:)","title":"onCrossRoomConnectionRejectedWithHostUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionrequest(hostuser:)","title":"onCrossRoomConnectionRequestWithHostUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectiontimeout(inviter:invitee:)","title":"onCrossRoomConnectionTimeoutWithInviter:invitee:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onroomdismissed(roomid:)","title":"onRoomDismissedWithRoomId:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionaccepted(userinfo:)","title":"onUserConnectionAcceptedWithUserInfo:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectioncancelled(inviteruser:)","title":"onUserConnectionCancelledWithInviterUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionexited(userinfo:)","title":"onUserConnectionExitedWithUserInfo:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionrejected(userinfo:)","title":"onUserConnectionRejectedWithUserInfo:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionrequest(inviteruser:)","title":"onUserConnectionRequestWithInviterUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionterminated()","title":"onUserConnectionTerminated","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectiontimeout(userinfo:)","title":"onUserConnectionTimeoutWithUserInfo:","type":"method"}],"path":"\/documentation\/atomicxcore\/connectionobserver","title":"ConnectionObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createbattlecontainerview()","title":"createBattleContainerView","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createbattleview(battleuser:)","title":"createBattleViewWithBattleUser:","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createcoguestview(seatinfo:viewlayer:)","title":"createCoGuestViewWithSeatInfo:viewLayer:","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createcohostview(seatinfo:viewlayer:)","title":"createCoHostViewWithSeatInfo:viewLayer:","type":"method"}],"path":"\/documentation\/atomicxcore\/videoviewdelegate","title":"VideoViewDelegate","type":"protocol"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/atomicxcoreversionnumber","title":"AtomicXCoreVersionNumber","type":"var"},{"path":"\/documentation\/atomicxcore\/atomicxcoreversionstring","title":"AtomicXCoreVersionString","type":"var"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/floatlayout","title":"LayoutModeFloatLayout","type":"case"},{"path":"\/documentation\/atomicxcore\/layoutmode\/freelayout","title":"LayoutModeFreeLayout","type":"case"},{"path":"\/documentation\/atomicxcore\/layoutmode\/gridlayout","title":"LayoutModeGridLayout","type":"case"}],"path":"\/documentation\/atomicxcore\/layoutmode","title":"LayoutMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/background","title":"ViewLayerBackground","type":"case"},{"path":"\/documentation\/atomicxcore\/viewlayer\/foreground","title":"ViewLayerForeground","type":"case"}],"path":"\/documentation\/atomicxcore\/viewlayer","title":"ViewLayer","type":"enum"}],"path":"\/documentation\/atomicxcore","title":"AtomicXCore","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/state","title":"var state: StatePublisher<AudioEffectState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/setaudiochangertype(type:)","title":"func setAudioChangerType(type: AudioChangerType)","type":"method"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/setaudioreverbtype(type:)","title":"func setAudioReverbType(type: AudioReverbType)","type":"method"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/setvoiceearmonitorenable(enable:)","title":"func setVoiceEarMonitorEnable(enable: Bool)","type":"method"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/setvoiceearmonitorvolume(volume:)","title":"func setVoiceEarMonitorVolume(volume: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioeffectstore\/shared","title":"static let shared: AudioEffectStore","type":"property"}],"path":"\/documentation\/atomicxcore\/audioeffectstore","title":"AudioEffectStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragestore\/state","title":"var state: StatePublisher<BarrageState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragestore\/appendlocaltip(message:)","title":"func appendLocalTip(message: Barrage)","type":"method"},{"path":"\/documentation\/atomicxcore\/barragestore\/sendcustommessage(businessid:data:completion:)","title":"func sendCustomMessage(businessId: String, data: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/barragestore\/sendtextmessage(text:extensioninfo:completion:)","title":"func sendTextMessage(text: String, extensionInfo: [String : String]?, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragestore\/create(liveid:)","title":"static func create(liveId: String) -> BarrageStore","type":"method"}],"path":"\/documentation\/atomicxcore\/barragestore","title":"BarrageStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/state","title":"var state: StatePublisher<BaseBeautyState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/setruddylevel(ruddylevel:)","title":"func setRuddyLevel(ruddyLevel: Float)","type":"method"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/setsmoothlevel(smoothlevel:)","title":"func setSmoothLevel(smoothLevel: Float)","type":"method"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/setwhitenesslevel(whitenesslevel:)","title":"func setWhitenessLevel(whitenessLevel: Float)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/basebeautystore\/shared","title":"static let shared: BaseBeautyStore","type":"property"}],"path":"\/documentation\/atomicxcore\/basebeautystore","title":"BaseBeautyStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlestore\/battleeventpublisher","title":"var battleEventPublisher: PassthroughSubject<BattleEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestore\/state","title":"var state: StatePublisher<BattleState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlestore\/acceptbattle(battleid:completion:)","title":"func acceptBattle(battleId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/battlestore\/cancelbattlerequest(battleid:useridlist:completion:)","title":"func cancelBattleRequest(battleId: String, userIdList: [String], completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/battlestore\/exitbattle(battleid:completion:)","title":"func exitBattle(battleId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/battlestore\/rejectbattle(battleid:completion:)","title":"func rejectBattle(battleId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/battlestore\/requestbattle(config:useridlist:timeout:completion:)","title":"func requestBattle(config: BattleConfig, userIdList: [String], timeout: TimeInterval, completion: BattleRequestClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlestore\/create(liveid:)","title":"static func create(liveId: String) -> BattleStore","type":"method"}],"path":"\/documentation\/atomicxcore\/battlestore","title":"BattleStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleuserviewmodel\/battleuser","title":"var battleUser: TUIBattleUser","type":"property"},{"path":"\/documentation\/atomicxcore\/battleuserviewmodel\/rect","title":"var rect: CGRect","type":"property"}],"path":"\/documentation\/atomicxcore\/battleuserviewmodel","title":"BattleUserViewModel","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/state","title":"var state: StatePublisher<C2CSettingState>","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/userid","title":"let userID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/addtoblacklist(completion:)","title":"func addToBlacklist(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/checkblackliststatus(completion:)","title":"func checkBlacklistStatus(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/deletefriend(completion:)","title":"func deleteFriend(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/fetchuserinfo(completion:)","title":"func fetchUserInfo(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/removefromblacklist(completion:)","title":"func removeFromBlacklist(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/setuserremark(remark:completion:)","title":"func setUserRemark(remark: String, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/c2csettingstore\/create(userid:)","title":"static func create(userID: String) -> C2CSettingStore","type":"method"}],"path":"\/documentation\/atomicxcore\/c2csettingstore","title":"C2CSettingStore","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/chatutil\/convertdatetohmstr(_:)","title":"static func convertDateToHMStr(Date?) -> String?","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/converttosysteminfofromgroupinfochangedlist(opuser:userlist:tipselem:)","title":"static func convertToSystemInfoFromGroupInfoChangedList(opUser: String, userList: [String], tipsElem: V2TIMGroupTipsElem) -> [SystemMessageInfo]","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/converttosysteminfofromrecall(_:operateuser:reason:)","title":"static func convertToSystemInfoFromRecall(V2TIMMessage, operateUser: V2TIMUserInfo?, reason: String?) -> SystemMessageInfo","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/converttouimessage(rawmessage:)","title":"static func convertToUIMessage(rawMessage: V2TIMMessage) -> MessageInfo","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/dictionary2jsondata(_:)","title":"static func dictionary2JsonData([String : Any]) -> Data?","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/generatemediapath(messagetype:withextension:)","title":"static func generateMediaPath(messageType: MessageType, withExtension: String?) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getactualmediapath(_:mediapath:uuid:fileextension:islocalexist:)","title":"static func getActualMediaPath(MessageType, mediaPath: String?, uuid: String?, fileExtension: String?, isLocalExist: inout Bool) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getc2cconversationid(_:)","title":"static func getC2CConversationID(String) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getgroupconversationid(_:)","title":"static func getGroupConversationID(String) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getgroupid(_:)","title":"static func getGroupID(String) -> String?","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/gethomepath()","title":"static func getHomePath() -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getmediahomepath(messagetype:)","title":"static func getMediaHomePath(messageType: MessageType) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getmembershowname(_:)","title":"static func getMemberShowName(V2TIMGroupMemberInfo?) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getmembershowname(_:with:)","title":"static func getMemberShowName(V2TIMGroupTipsElem?, with: String?) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getmembersshowname(_:)","title":"static func getMembersShowName([V2TIMGroupMemberInfo]?) -> [String]","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getmessagesendername(_:)","title":"static func getMessageSenderName(V2TIMMessage?) -> String","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/getuserid(_:)","title":"static func getUserID(String) -> String?","type":"method"},{"path":"\/documentation\/atomicxcore\/chatutil\/jsondata2dictionary(jsondata:)","title":"static func jsonData2Dictionary(jsonData: Data?) -> [String : Any]?","type":"method"}],"path":"\/documentation\/atomicxcore\/chatutil","title":"ChatUtil","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cogueststore\/guesteventpublisher","title":"let guestEventPublisher: PassthroughSubject<GuestEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststore\/hosteventpublisher","title":"let hostEventPublisher: PassthroughSubject<HostEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststore\/state","title":"let state: StatePublisher<CoGuestState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cogueststore\/acceptapplication(userid:completion:)","title":"func acceptApplication(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/acceptinvitation(inviterid:completion:)","title":"func acceptInvitation(inviterId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/applyforseat(seatindex:timeout:extrainfo:completion:)","title":"func applyForSeat(seatIndex: Int, timeout: TimeInterval, extraInfo: String?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/cancelapplication(completion:)","title":"func cancelApplication(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/cancelinvitation(inviteeid:completion:)","title":"func cancelInvitation(inviteeId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/disconnect(completion:)","title":"func disConnect(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/invitetoseat(userid:seatindex:timeout:extrainfo:completion:)","title":"func inviteToSeat(userId: String, seatIndex: Int, timeout: TimeInterval, extraInfo: String?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/rejectapplication(userid:completion:)","title":"func rejectApplication(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cogueststore\/rejectinvitation(inviterid:completion:)","title":"func rejectInvitation(inviterId: String, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cogueststore\/create(liveid:)","title":"static func create(liveId: String) -> CoGuestStore","type":"method"}],"path":"\/documentation\/atomicxcore\/cogueststore","title":"CoGuestStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststore\/cohosteventpublisher","title":"let coHostEventPublisher: PassthroughSubject<CoHostEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststore\/state","title":"let state: StatePublisher<CoHostState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststore\/accepthostconnection(fromhostliveid:completion:)","title":"func acceptHostConnection(fromHostLiveId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cohoststore\/cancelhostconnection(tohostliveid:completion:)","title":"func cancelHostConnection(toHostLiveId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cohoststore\/exithostconnection(completion:)","title":"func exitHostConnection(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cohoststore\/rejecthostconnection(fromhostliveid:completion:)","title":"func rejectHostConnection(fromHostLiveId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/cohoststore\/requesthostconnection(targethost:layouttemplate:timeout:extrainfo:completion:)","title":"func requestHostConnection(targetHost: String, layoutTemplate: CoHostLayoutTemplate, timeout: TimeInterval, extraInfo: String, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststore\/create(liveid:)","title":"static func create(liveId: String) -> CoHostStore","type":"method"}],"path":"\/documentation\/atomicxcore\/cohoststore","title":"CoHostStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostuser\/connectionuser","title":"var connectionUser: TUIConnectionUser","type":"property"},{"path":"\/documentation\/atomicxcore\/cohostuser\/hasaudiostream","title":"var hasAudioStream: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/cohostuser\/hasvideostream","title":"var hasVideoStream: Bool","type":"property"}],"path":"\/documentation\/atomicxcore\/cohostuser","title":"CoHostUser","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactliststore\/state","title":"var state: StatePublisher<ContactListState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactliststore\/acceptfriendapplication(info:completion:)","title":"func acceptFriendApplication(info: FriendApplicationInfo, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/acceptgroupapplication(info:completion:)","title":"func acceptGroupApplication(info: GroupApplicationInfo, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/addfriend(userid:remark:addwording:completion:)","title":"func addFriend(userID: String, remark: String?, addWording: String?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/clearfriendapplicationunreadcount(completion:)","title":"func clearFriendApplicationUnreadCount(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/cleargroupapplicationunreadcount(completion:)","title":"func clearGroupApplicationUnreadCount(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/creategroup(grouptype:groupname:groupid:avatarurl:memberlist:completion:)","title":"func createGroup(groupType: String, groupName: String, groupID: String?, avatarURL: String?, memberList: [ContactInfo]?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchblacklist(completion:)","title":"func fetchBlackList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchfriendapplicationlist(completion:)","title":"func fetchFriendApplicationList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchfriendlist(completion:)","title":"func fetchFriendList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchgroupapplicationlist(completion:)","title":"func fetchGroupApplicationList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchgroupinfo(groupid:completion:)","title":"func fetchGroupInfo(groupID: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchjoinedgrouplist(completion:)","title":"func fetchJoinedGroupList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/fetchuserinfo(userid:completion:)","title":"func fetchUserInfo(userID: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/joingroup(groupid:message:completion:)","title":"func joinGroup(groupID: String, message: String?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/refusefriendapplication(info:completion:)","title":"func refuseFriendApplication(info: FriendApplicationInfo, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/contactliststore\/refusegroupapplication(info:completion:)","title":"func refuseGroupApplication(info: GroupApplicationInfo, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactliststore\/create()","title":"static func create() -> ContactListStore","type":"method"}],"path":"\/documentation\/atomicxcore\/contactliststore","title":"ContactListStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationliststate\/conversationlist","title":"var conversationList: [ConversationInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationliststate\/hasmoreconversation","title":"var hasMoreConversation: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationliststate\/totalunreadcount","title":"var totalUnreadCount: UInt","type":"property"}],"path":"\/documentation\/atomicxcore\/conversationliststate","title":"ConversationListState","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/state","title":"var state: StatePublisher<ConversationListState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/clearconversationmessages(_:completion:)","title":"func clearConversationMessages(String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/clearconversationunreadcount(_:completion:)","title":"func clearConversationUnreadCount(String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/deleteconversation(_:completion:)","title":"func deleteConversation(String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/fetchconversationinfo(_:completion:)","title":"func fetchConversationInfo(String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/fetchconversationlist(_:completion:)","title":"func fetchConversationList(ConversationFetchOption, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/fetchmoreconversationlist(completion:)","title":"func fetchMoreConversationList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/getconversationtotalunreadcount(completion:)","title":"func getConversationTotalUnreadCount(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/markconversationunread(_:unread:completion:)","title":"func markConversationUnread(String, unread: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/muteconversation(_:mute:completion:)","title":"func muteConversation(String, mute: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/pinconversation(_:pin:completion:)","title":"func pinConversation(String, pin: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/setconversationdraft(_:draft:completion:)","title":"func setConversationDraft(String, draft: String?, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationliststore\/create()","title":"static func create() -> ConversationListStore","type":"method"}],"path":"\/documentation\/atomicxcore\/conversationliststore","title":"ConversationListStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestore\/state","title":"var state: StatePublisher<DeviceState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestore\/closelocalcamera()","title":"func closeLocalCamera()","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/closelocalmicrophone()","title":"func closeLocalMicrophone()","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/openlocalcamera(isfront:completion:)","title":"func openLocalCamera(isFront: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/openlocalmicrophone(completion:)","title":"func openLocalMicrophone(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/setaudioroute(_:)","title":"func setAudioRoute(AudioRoute)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/setcapturevolume(volume:)","title":"func setCaptureVolume(volume: Int)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/setoutputvolume(_:)","title":"func setOutputVolume(Int)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/startscreenshare(appgroup:)","title":"func startScreenShare(appGroup: String)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/stopscreenshare()","title":"func stopScreenShare()","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/switchcamera(isfront:)","title":"func switchCamera(isFront: Bool)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/switchmirror(mirrortype:)","title":"func switchMirror(mirrorType: MirrorType)","type":"method"},{"path":"\/documentation\/atomicxcore\/devicestore\/updatevideoquality(_:)","title":"func updateVideoQuality(VideoQuality)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestore\/shared","title":"static let shared: DeviceStore","type":"property"}],"path":"\/documentation\/atomicxcore\/devicestore","title":"DeviceStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftstore\/gifteventpublisher","title":"var giftEventPublisher: PassthroughSubject<GiftEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/giftstore\/state","title":"var state: StatePublisher<GiftState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftstore\/refreshusablegifts(completion:)","title":"func refreshUsableGifts(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/giftstore\/sendgift(giftid:count:completion:)","title":"func sendGift(giftId: String, count: UInt, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/giftstore\/setlanguage(_:)","title":"func setLanguage(String)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftstore\/create(liveid:)","title":"static func create(liveId: String) -> GiftStore","type":"method"}],"path":"\/documentation\/atomicxcore\/giftstore","title":"GiftStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/groupid","title":"var groupID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/state","title":"var state: StatePublisher<GroupSettingState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/addgroupmember(useridlist:completion:)","title":"func addGroupMember(userIDList: [String], completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/changegroupowner(newownerid:completion:)","title":"func changeGroupOwner(newOwnerID: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/deletegroupmember(members:completion:)","title":"func deleteGroupMember(members: [GroupMember], completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/dismissgroup(completion:)","title":"func dismissGroup(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/fetchgroupinfo(completion:)","title":"func fetchGroupInfo(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/fetchgroupmemberlist(role:completion:)","title":"func fetchGroupMemberList(role: GroupMemberRole, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/fetchmoregroupmemberlist(completion:)","title":"func fetchMoreGroupMemberList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/fetchselfmemberinfo(completion:)","title":"func fetchSelfMemberInfo(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/quitgroup(completion:)","title":"func quitGroup(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setgroupinviteoption(option:completion:)","title":"func setGroupInviteOption(option: GroupJoinOption, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setgroupjoinoption(option:completion:)","title":"func setGroupJoinOption(option: GroupJoinOption, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setgroupmembermutetime(userid:time:completion:)","title":"func setGroupMemberMuteTime(userID: String, time: UInt, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setgroupmemberrole(userid:role:completion:)","title":"func setGroupMemberRole(userID: String, role: GroupMemberRole, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setmuteallmembers(value:completion:)","title":"func setMuteAllMembers(value: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/setselfgroupnamecard(namecard:completion:)","title":"func setSelfGroupNameCard(nameCard: String?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/updategroupprofile(name:notice:avatar:completion:)","title":"func updateGroupProfile(name: String?, notice: String?, avatar: String?, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupsettingstore\/create(groupid:)","title":"static func create(groupID: String) -> GroupSettingStore","type":"method"}],"path":"\/documentation\/atomicxcore\/groupsettingstore","title":"GroupSettingStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/likestore\/likeeventpublisher","title":"var likeEventPublisher: PassthroughSubject<LikeEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/likestore\/state","title":"var state: StatePublisher<LikeState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/likestore\/sendlike(count:completion:)","title":"func sendLike(count: UInt, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/likestore\/create(liveid:)","title":"static func create(liveId: String) -> LikeStore","type":"method"}],"path":"\/documentation\/atomicxcore\/likestore","title":"LikeStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/liveaudienceeventpublisher","title":"var liveAudienceEventPublisher: PassthroughSubject<LiveAudienceEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/state","title":"var state: StatePublisher<LiveAudienceState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/disablesendmessage(userid:isdisable:completion:)","title":"func disableSendMessage(userId: String, isDisable: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/fetchaudiencelist(completion:)","title":"func fetchAudienceList(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/kickuseroutofroom(userid:completion:)","title":"func kickUserOutOfRoom(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/revokeadministrator(userid:completion:)","title":"func revokeAdministrator(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/setadministrator(userid:completion:)","title":"func setAdministrator(userId: String, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudiencestore\/create(liveid:)","title":"static func create(liveId: String) -> LiveAudienceStore","type":"method"}],"path":"\/documentation\/atomicxcore\/liveaudiencestore","title":"LiveAudienceStore","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecoreview\/init(viewtype:frame:)","title":"init(viewType: CoreViewType, frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecoreview\/videoviewdelegate","title":"var videoViewDelegate: VideoViewDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecoreview\/cancelbattle(battleid:useridlist:onsuccess:onerror:)","title":"func cancelBattle(battleId: String, userIdList: [String], onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/cancelcrossroomconnection(roomid:onsuccess:onerror:)","title":"func cancelCrossRoomConnection(roomId: String, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/cancelintraroomconnection(userid:onsuccess:onerror:)","title":"func cancelIntraRoomConnection(userId: String, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/didmovetowindow()","title":"func didMoveToWindow()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/disconnectuser(userid:onsuccess:onerror:)","title":"func disconnectUser(userId: String, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/enablemirror(enable:)","title":"func enableMirror(enable: Bool)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/getstate()","title":"func getState<T>() -> T","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/joinlivestream(roomid:onsuccess:onerror:)-3zkry","title":"func joinLiveStream(roomId: String, onSuccess: TUIRoomInfoBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/joinlivestream(roomid:onsuccess:onerror:)-rcay","title":"func joinLiveStream(roomId: String, onSuccess: TUILiveInfoBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/leavelivestream(onsuccess:onerror:)","title":"func leaveLiveStream(onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/mutemicrophone()","title":"func muteMicrophone()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/registerbattleobserver(observer:)","title":"func registerBattleObserver(observer: BattleObserver)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/registerconnectionobserver(observer:)","title":"func registerConnectionObserver(observer: ConnectionObserver)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/requestbattle(config:useridlist:timeout:onsuccess:onerror:)","title":"func requestBattle(config: TUIBattleConfig, userIdList: [String], timeout: TimeInterval, onSuccess: TUIBattleRequestBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/requestcrossroomconnection(roomid:timeout:onsuccess:onerror:)","title":"func requestCrossRoomConnection(roomId: String, timeOut: Int, onSuccess: ((TUIConnectionCode?) -> Void), onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/requestintraroomconnection(userid:timeout:opencamera:seatindex:onsuccess:onerror:)","title":"func requestIntraRoomConnection(userId: String, timeOut: Int, openCamera: Bool, seatIndex: Int, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/respondintraroomconnection(userid:isaccepted:onsuccess:onerror:)","title":"func respondIntraRoomConnection(userId: String, isAccepted: Bool, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/respondtobattle(battleid:isaccepted:onsuccess:onerror:)","title":"func respondToBattle(battleId: String, isAccepted: Bool, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/respondtocrossroomconnection(roomid:isaccepted:onsuccess:onerror:)","title":"func respondToCrossRoomConnection(roomId: String, isAccepted: Bool, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/setliveid(_:)","title":"func setLiveId(String)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/setlocalvideomuteimage(bigimage:smallimage:)","title":"func setLocalVideoMuteImage(bigImage: UIImage?, smallImage: UIImage?)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/startcamera(usefrontcamera:onsuccess:onerror:)","title":"func startCamera(useFrontCamera: Bool, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/startlivestream(liveinfo:onsuccess:onerror:)","title":"func startLiveStream(liveInfo: TUILiveInfo, onSuccess: TUILiveInfoBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/startlivestream(roominfo:onsuccess:onerror:)","title":"func startLiveStream(roomInfo: TUIRoomInfo, onSuccess: TUIRoomInfoBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/startmicrophone(onsuccess:onerror:)","title":"func startMicrophone(onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/startpreviewlivestream(roomid:ismuteaudio:onplaying:onloading:onerror:)","title":"func startPreviewLiveStream(roomId: String, isMuteAudio: Bool, onPlaying: TUIPlayOnPlayingBlock?, onLoading: TUIPlayOnLoadingBlock?, onError: TUIPlayOnErrorBlock?)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/stopcamera()","title":"func stopCamera()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/stoplivestream(onsuccess:onerror:)-4c4j7","title":"func stopLiveStream(onSuccess: TUIStopLiveBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/stoplivestream(onsuccess:onerror:)-6ibtq","title":"func stopLiveStream(onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/stopmicrophone()","title":"func stopMicrophone()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/stoppreviewlivestream(roomid:)","title":"func stopPreviewLiveStream(roomId: String)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/subscribestate(_:)","title":"func subscribeState<State, Value>(StatePublisherSelector<State, Value>) -> AnyPublisher<Value, Never>","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/switchcamera(isfront:)","title":"func switchCamera(isFront: Bool)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/terminatebattle(battleid:onsuccess:onerror:)","title":"func terminateBattle(battleId: String, onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/terminatecrossroomconnection()","title":"func terminateCrossRoomConnection()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/terminateintraroomconnection()","title":"func terminateIntraRoomConnection()","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/unmutemicrophone(onsuccess:onerror:)","title":"func unmuteMicrophone(onSuccess: TUISuccessBlock, onError: TUIErrorBlock)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/unregisterbattleobserver(observer:)","title":"func unregisterBattleObserver(observer: BattleObserver)","type":"method"},{"path":"\/documentation\/atomicxcore\/livecoreview\/unregisterconnectionobserver(observer:)","title":"func unregisterConnectionObserver(observer: ConnectionObserver)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecoreview\/callexperimentalapi(_:)","title":"static func callExperimentalAPI(String)","type":"method"}],"path":"\/documentation\/atomicxcore\/livecoreview","title":"LiveCoreView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveliststore\/livelisteventpublisher","title":"let liveListEventPublisher: PassthroughSubject<LiveListEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/liveliststore\/state","title":"let state: StatePublisher<LiveListState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveliststore\/createlive(_:completion:)","title":"func createLive(LiveInfo, completion: LiveInfoCompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/endlive(completion:)","title":"func endLive(completion: StopLiveCompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/fetchlivelist(cursor:count:completion:)","title":"func fetchLiveList(cursor: String, count: Int, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/joinlive(liveid:completion:)","title":"func joinLive(liveId: String, completion: LiveInfoCompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/leavelive(completion:)","title":"func leaveLive(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/querymetadata(keys:completion:)","title":"func queryMetaData(keys: [String], completion: MetaDataCompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/updateliveinfo(_:modifyflag:completion:)","title":"func updateLiveInfo(LiveInfo, modifyFlag: LiveInfo.ModifyFlag, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveliststore\/updatelivemetadata(_:completion:)","title":"func updateLiveMetaData([String : String], completion: CompletionClosure?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveliststore\/shared","title":"static let shared: LiveListStore","type":"property"}],"path":"\/documentation\/atomicxcore\/liveliststore","title":"LiveListStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/liveseateventpublisher","title":"var liveSeatEventPublisher: PassthroughSubject<LiveSeatEvent, Never>","type":"property"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/state","title":"var state: StatePublisher<LiveSeatState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/closeremotecamera(userid:completion:)","title":"func closeRemoteCamera(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/closeremotemicrophone(userid:completion:)","title":"func closeRemoteMicrophone(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/kickuseroutofseat(userid:completion:)","title":"func kickUserOutOfSeat(userId: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/leaveseat(completion:)","title":"func leaveSeat(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/lockseat(seatindex:completion:)","title":"func lockSeat(seatIndex: Int, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/moveusertoseat(userid:targetindex:policy:completion:)","title":"func moveUserToSeat(userId: String, targetIndex: Int, policy: MoveSeatPolicy?, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/mutemicrophone()","title":"func muteMicrophone()","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/openremotecamera(userid:policy:completion:)","title":"func openRemoteCamera(userId: String, policy: DeviceControlPolicy, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/openremotemicrophone(userid:policy:completion:)","title":"func openRemoteMicrophone(userId: String, policy: DeviceControlPolicy, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/takeseat(seatindex:completion:)","title":"func takeSeat(seatIndex: Int, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/unlockseat(seatindex:completion:)","title":"func unlockSeat(seatIndex: Int, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/unmutemicrophone(completion:)","title":"func unmuteMicrophone(completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveseatstore\/create(liveid:)","title":"static func create(liveId: String) -> LiveSeatStore","type":"method"}],"path":"\/documentation\/atomicxcore\/liveseatstore","title":"LiveSeatStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstore\/sdkappid","title":"var sdkAppID: Int32","type":"property"},{"path":"\/documentation\/atomicxcore\/loginstore\/state","title":"var state: StatePublisher<LoginState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstore\/login(sdkappid:userid:usersig:completion:)","title":"func login(sdkAppID: Int32, userID: String, userSig: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/loginstore\/logout(completion:)","title":"func logout(completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/loginstore\/setselfinfo(userprofile:completion:)","title":"func setSelfInfo(userProfile: UserProfile, completion: CompletionClosure?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstore\/shared","title":"static let shared: LoginStore","type":"property"}],"path":"\/documentation\/atomicxcore\/loginstore","title":"LoginStore","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/addemojimessage(_:emojiid:completion:)","title":"func addEmojiMessage(MessageInfo, emojiID: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/deletemessage(_:completion:)","title":"func deleteMessage(MessageInfo, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/forwardmessages(_:forwardtype:conversationidlist:completion:)","title":"func forwardMessages([MessageInfo], forwardType: MessageForwardType, conversationIDList: [String], completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/pinmessage(_:pin:completion:)","title":"func pinMessage(MessageInfo, pin: Bool, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/recallmessage(_:completion:)","title":"func recallMessage(MessageInfo, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/removeemojimessage(_:emojiid:completion:)","title":"func removeEmojiMessage(MessageInfo, emojiID: String, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/sendmessagereadreceipt(_:completion:)","title":"func sendMessageReadReceipt([MessageInfo], completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageactionstore\/create()","title":"static func create() -> MessageActionStore","type":"method"}],"path":"\/documentation\/atomicxcore\/messageactionstore","title":"MessageActionStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageinputstore\/conversationid","title":"var conversationID: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageinputstore\/sendmessage(_:completion:)","title":"func sendMessage(MessageInfo, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageinputstore\/create(conversationid:)","title":"static func create(conversationID: String) -> MessageInputStore","type":"method"}],"path":"\/documentation\/atomicxcore\/messageinputstore","title":"MessageInputStore","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageliststore\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/messageliststore\/state","title":"var state: StatePublisher<MessageListState>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageliststore\/downloadmessageresource(_:resourcetype:completion:)","title":"func downloadMessageResource(MessageInfo, resourceType: MessageMediaFileType, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageliststore\/fetchmessagelist(with:completion:)","title":"func fetchMessageList(with: MessageFetchOption, completion: CompletionClosure?)","type":"method"},{"path":"\/documentation\/atomicxcore\/messageliststore\/fetchmoremessagelist(direction:completion:)","title":"func fetchMoreMessageList(direction: MessageFetchDirection, completion: CompletionClosure?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageliststore\/create(conversationid:messagelisttype:)","title":"static func create(conversationID: String, messageListType: MessageListType) -> MessageListStore","type":"method"}],"path":"\/documentation\/atomicxcore\/messageliststore","title":"MessageListStore","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/signalvideoview\/didmovetowindow()","title":"func didMoveToWindow()","type":"method"}],"path":"\/documentation\/atomicxcore\/signalvideoview","title":"SignalVideoView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisher\/init(initialstate:)","title":"init(initialState: State)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisher\/value","title":"var value: State","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisher\/subscribe()","title":"func subscribe() -> AnyPublisher<State, Never>","type":"method"},{"path":"\/documentation\/atomicxcore\/statepublisher\/subscribe(_:)-30hv5","title":"func subscribe<Value>(StatePublisherSelector<State, Value>) -> AnyPublisher<Value, Never>","type":"method"},{"path":"\/documentation\/atomicxcore\/statepublisher\/subscribe(_:)-9r904","title":"func subscribe<Value>(StatePublisherSelector<State, Value>) -> AnyPublisher<Value, Never>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisher\/statepublisherupdateclosure","title":"StatePublisher.StatePublisherUpdateClosure","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisher\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/atomicxcore\/statepublisher\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/statepublisher","title":"StatePublisher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisherselector\/init(keypath:)","title":"init(keyPath: KeyPath<State, Value>)","type":"init"},{"path":"\/documentation\/atomicxcore\/statepublisherselector\/init(projector:)","title":"init(projector: (State) -> Value)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepublisherselector\/map(_:)","title":"func map(State) -> Value","type":"method"},{"path":"\/documentation\/atomicxcore\/statepublisherselector\/map(_:statehash:)","title":"func map(State, stateHash: UUID) -> Value","type":"method"},{"path":"\/documentation\/atomicxcore\/statepublisherselector\/setresult(value:forstatehash:)","title":"func setResult(value: Value, forStateHash: UUID)","type":"method"}],"path":"\/documentation\/atomicxcore\/statepublisherselector","title":"StatePublisherSelector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/hasaudiostream","title":"static let hasAudioStream: UserInfoModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/hasvideostream","title":"static let hasVideoStream: UserInfoModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/namecard","title":"static let nameCard: UserInfoModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/none","title":"static let none: UserInfoModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/userrole","title":"static let userRole: UserInfoModifyFlag","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/atomicxcore\/userinfomodifyflag\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/userinfomodifyflag","title":"UserInfoModifyFlag","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattleended(battleinfo:)","title":"func onBattleEnded(battleInfo: TUIBattleInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestaccept(battleid:inviter:invitee:)","title":"func onBattleRequestAccept(battleId: String, inviter: TUIBattleUser, invitee: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestcancelled(battleid:inviter:invitee:)","title":"func onBattleRequestCancelled(battleId: String, inviter: TUIBattleUser, invitee: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestreceived(battleid:inviter:invitee:)","title":"func onBattleRequestReceived(battleId: String, inviter: TUIBattleUser, invitee: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequestreject(battleid:inviter:invitee:)","title":"func onBattleRequestReject(battleId: String, inviter: TUIBattleUser, invitee: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlerequesttimeout(battleid:inviter:invitee:)","title":"func onBattleRequestTimeout(battleId: String, inviter: TUIBattleUser, invitee: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlescorechanged(battleid:battleuserlist:)","title":"func onBattleScoreChanged(battleId: String, battleUserList: [TUIBattleUser])","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onbattlestarted(battleinfo:)","title":"func onBattleStarted(battleInfo: TUIBattleInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onuserexitbattle(battleid:battleuser:)","title":"func onUserExitBattle(battleId: String, battleUser: TUIBattleUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/battleobserver\/onuserjoinbattle(battleid:battleuser:)","title":"func onUserJoinBattle(battleId: String, battleUser: TUIBattleUser)","type":"method"}],"path":"\/documentation\/atomicxcore\/battleobserver","title":"BattleObserver","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onconnectedroomsupdated(hostuserlist:)","title":"func onConnectedRoomsUpdated(hostUserList: [TUIConnectionUser])","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onconnectedusersupdated(userlist:joinlist:leavelist:)","title":"func onConnectedUsersUpdated(userList: [TUIUserInfo], joinList: [TUIUserInfo], leaveList: [TUIUserInfo])","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionaccepted(hostuser:)","title":"func onCrossRoomConnectionAccepted(hostUser: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectioncancelled(hostuser:)","title":"func onCrossRoomConnectionCancelled(hostUser: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionexited(hostuser:)","title":"func onCrossRoomConnectionExited(hostUser: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionrejected(hostuser:)","title":"func onCrossRoomConnectionRejected(hostUser: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectionrequest(hostuser:)","title":"func onCrossRoomConnectionRequest(hostUser: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/oncrossroomconnectiontimeout(inviter:invitee:)","title":"func onCrossRoomConnectionTimeout(inviter: TUIConnectionUser, invitee: TUIConnectionUser)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onroomdismissed(roomid:)","title":"func onRoomDismissed(roomId: String)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionaccepted(userinfo:)","title":"func onUserConnectionAccepted(userInfo: TUIUserInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectioncancelled(inviteruser:)","title":"func onUserConnectionCancelled(inviterUser: TUIUserInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionexited(userinfo:)","title":"func onUserConnectionExited(userInfo: TUIUserInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionrejected(userinfo:)","title":"func onUserConnectionRejected(userInfo: TUIUserInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionrequest(inviteruser:)","title":"func onUserConnectionRequest(inviterUser: TUIUserInfo)","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectionterminated()","title":"func onUserConnectionTerminated()","type":"method"},{"path":"\/documentation\/atomicxcore\/connectionobserver\/onuserconnectiontimeout(userinfo:)","title":"func onUserConnectionTimeout(userInfo: TUIUserInfo)","type":"method"}],"path":"\/documentation\/atomicxcore\/connectionobserver","title":"ConnectionObserver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/coreviewstate\/init()","title":"init()","type":"init"}],"path":"\/documentation\/atomicxcore\/coreviewstate","title":"CoreViewState","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepropertyselector\/state","title":"State","type":"associatedtype"},{"path":"\/documentation\/atomicxcore\/statepropertyselector\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/statepropertyselector\/map(_:)","title":"func map(State) -> Value","type":"method"}],"path":"\/documentation\/atomicxcore\/statepropertyselector","title":"StatePropertySelector","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createbattlecontainerview()","title":"func createBattleContainerView() -> UIView?","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createbattleview(battleuser:)","title":"func createBattleView(battleUser: TUIBattleUser) -> UIView?","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createcoguestview(seatinfo:viewlayer:)","title":"func createCoGuestView(seatInfo: TUISeatFullInfo, viewLayer: ViewLayer) -> UIView?","type":"method"},{"path":"\/documentation\/atomicxcore\/videoviewdelegate\/createcohostview(seatinfo:viewlayer:)","title":"func createCoHostView(seatInfo: TUISeatFullInfo, viewLayer: ViewLayer) -> UIView?","type":"method"}],"path":"\/documentation\/atomicxcore\/videoviewdelegate","title":"VideoViewDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioeffectstate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioeffectstate\/audiochangertype","title":"var audioChangerType: AudioChangerType","type":"property"},{"path":"\/documentation\/atomicxcore\/audioeffectstate\/audioreverbtype","title":"var audioReverbType: AudioReverbType","type":"property"},{"path":"\/documentation\/atomicxcore\/audioeffectstate\/earmonitorvolume","title":"var earMonitorVolume: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/audioeffectstate\/isearmonitoropened","title":"var isEarMonitorOpened: Bool","type":"property"}],"path":"\/documentation\/atomicxcore\/audioeffectstate","title":"AudioEffectState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barrage\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barrage\/businessid","title":"var businessId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/data","title":"var data: String","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/extensioninfo","title":"var extensionInfo: [String : String]?","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/liveid","title":"var liveId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/messagetype","title":"var messageType: BarrageType","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/sender","title":"var sender: LiveUserInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/sequence","title":"var sequence: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/textcontent","title":"var textContent: String","type":"property"},{"path":"\/documentation\/atomicxcore\/barrage\/timestampinsecond","title":"var timestampInSecond: TimeInterval","type":"property"}],"path":"\/documentation\/atomicxcore\/barrage","title":"Barrage","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragestate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragestate\/messagelist","title":"var messageList: [Barrage]","type":"property"}],"path":"\/documentation\/atomicxcore\/barragestate","title":"BarrageState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/basebeautystate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/basebeautystate\/ruddylevel","title":"var ruddyLevel: Float","type":"property"},{"path":"\/documentation\/atomicxcore\/basebeautystate\/smoothlevel","title":"var smoothLevel: Float","type":"property"},{"path":"\/documentation\/atomicxcore\/basebeautystate\/whitenesslevel","title":"var whitenessLevel: Float","type":"property"}],"path":"\/documentation\/atomicxcore\/basebeautystate","title":"BaseBeautyState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleconfig\/duration","title":"var duration: TimeInterval","type":"property"},{"path":"\/documentation\/atomicxcore\/battleconfig\/extensioninfo","title":"var extensionInfo: String","type":"property"},{"path":"\/documentation\/atomicxcore\/battleconfig\/needresponse","title":"var needResponse: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleconfig\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/battleconfig\/==(_:_:)","title":"static func == (BattleConfig, BattleConfig) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/battleconfig\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/battleconfig","title":"BattleConfig","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleinfo\/battleid","title":"var battleId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/battleinfo\/config","title":"var config: BattleConfig","type":"property"},{"path":"\/documentation\/atomicxcore\/battleinfo\/endtime","title":"var endTime: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/battleinfo\/starttime","title":"var startTime: UInt","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/battleinfo\/==(_:_:)","title":"static func == (BattleInfo, BattleInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/battleinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/battleinfo","title":"BattleInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlestate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlestate\/battleid","title":"var battleId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestate\/battlescore","title":"var battleScore: [String : UInt]","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestate\/battleusers","title":"var battleUsers: [SeatUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestate\/battlinguserlist","title":"var battlingUserList: [TUIBattleUser]","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestate\/currentbattleinfo","title":"var currentBattleInfo: BattleInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/battlestate\/inviteelist","title":"var inviteeList: [TUIBattleUser]","type":"property"}],"path":"\/documentation\/atomicxcore\/battlestate","title":"BattleState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/avatarurl","title":"var avatarURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/iscontact","title":"var isContact: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/isinblacklist","title":"var isInBlacklist: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/isnotdisturb","title":"var isNotDisturb: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/nickname","title":"var nickname: String","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/remark","title":"var remark: String","type":"property"},{"path":"\/documentation\/atomicxcore\/c2csettingstate\/signature","title":"var signature: String","type":"property"}],"path":"\/documentation\/atomicxcore\/c2csettingstate","title":"C2CSettingState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cogueststate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cogueststate\/applicantlist","title":"var applicantList: Set<TUIUserInfo>","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/applicants","title":"var applicants: [LiveUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/candidates","title":"var candidates: [LiveUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/connected","title":"var connected: [SeatUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/connecteduserlist","title":"var connectedUserList: [TUIUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/inviteelist","title":"var inviteeList: Set<TUIUserInfo>","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/invitees","title":"var invitees: [LiveUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cogueststate\/seatlist","title":"var seatList: [TUISeatInfo]","type":"property"}],"path":"\/documentation\/atomicxcore\/cogueststate","title":"CoGuestState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststate\/applicants","title":"var applicants: [SeatUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/cohoststatus","title":"var coHostStatus: CoHostStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/connected","title":"var connected: [SeatUserInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/connecteduserlist","title":"var connectedUserList: [TUIConnectionUser]","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/invitee","title":"var invitee: SeatUserInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/receivedconnectionrequest","title":"var receivedConnectionRequest: TUIConnectionUser?","type":"property"},{"path":"\/documentation\/atomicxcore\/cohoststate\/sentconnectionrequestlist","title":"var sentConnectionRequestList: [TUIConnectionUser]","type":"property"}],"path":"\/documentation\/atomicxcore\/cohoststate","title":"CoHostState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactinfo\/init(identifier:avatarurl:title:)","title":"init(identifier: String, avatarURL: String?, title: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactinfo\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/contactid","title":"var contactID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/iscontact","title":"var isContact: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/isingroup","title":"var isInGroup: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/onlinestatus","title":"var onlineStatus: ContactOnlineStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/contactinfo\/type","title":"var type: ContactType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/contactinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/contactinfo","title":"ContactInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactliststate\/addfriendinfo","title":"var addFriendInfo: ContactInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/blacklist","title":"var blackList: [ContactInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/createdgroupid","title":"var createdGroupID: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/friendapplicationlist","title":"var friendApplicationList: [FriendApplicationInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/friendapplicationunreadcount","title":"var friendApplicationUnreadCount: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/friendlist","title":"var friendList: [ContactInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/groupapplicationlist","title":"var groupApplicationList: [GroupApplicationInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/groupapplicationunreadcount","title":"var groupApplicationUnreadCount: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/grouplist","title":"var groupList: [ContactInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/contactliststate\/joingroupinfo","title":"var joinGroupInfo: ContactInfo?","type":"property"}],"path":"\/documentation\/atomicxcore\/contactliststate","title":"ContactListState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationfetchoption\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationfetchoption\/count","title":"var count: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationfetchoption\/type","title":"var type: ConversationType","type":"property"}],"path":"\/documentation\/atomicxcore\/conversationfetchoption","title":"ConversationFetchOption","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/==(_:_:)","title":"static func == (ConversationInfo, ConversationInfo) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/init(conversationid:)","title":"init(conversationID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/conversationid","title":"var conversationID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/draft","title":"var draft: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/grouptype","title":"var groupType: GroupType?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/lastmessage","title":"var lastMessage: MessageInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/orderkey","title":"var orderKey: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/receiveoption","title":"var receiveOption: ConversationReceiveOption","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/timestamp","title":"var timestamp: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/type","title":"var type: ConversationType?","type":"property"},{"path":"\/documentation\/atomicxcore\/conversationinfo\/unreadcount","title":"var unreadCount: Int","type":"property"}],"path":"\/documentation\/atomicxcore\/conversationinfo","title":"ConversationInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/custommessageinfo\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/custommessageinfo\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/atomicxcore\/custommessageinfo\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/custommessageinfo\/extensioninfo","title":"var extensionInfo: String?","type":"property"}],"path":"\/documentation\/atomicxcore\/custommessageinfo","title":"CustomMessageInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestate\/cameralasterror","title":"var cameraLastError: DeviceError","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/camerastatus","title":"var cameraStatus: DeviceStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/capturevolume","title":"var captureVolume: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/currentaudioroute","title":"var currentAudioRoute: AudioRoute","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/currentmicvolume","title":"var currentMicVolume: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/isfrontcamera","title":"var isFrontCamera: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/localmirrortype","title":"var localMirrorType: MirrorType","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/localvideoquality","title":"var localVideoQuality: VideoQuality","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/microphonelasterror","title":"var microphoneLastError: DeviceError","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/microphonestatus","title":"var microphoneStatus: DeviceStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/networkinfo","title":"var networkInfo: NetworkInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/outputvolume","title":"var outputVolume: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/devicestate\/screenstatus","title":"var screenStatus: DeviceStatus","type":"property"}],"path":"\/documentation\/atomicxcore\/devicestate","title":"DeviceState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/errorinfo\/init(code:message:)","title":"init(code: Int, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/errorinfo\/code","title":"let code: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/errorinfo\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/errorinfo\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/atomicxcore\/errorinfo\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/errorinfo","title":"ErrorInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/errorstate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/errorstate\/errorinfo","title":"var errorInfo: (code: TUIError, message: String)?","type":"property"}],"path":"\/documentation\/atomicxcore\/errorstate","title":"ErrorState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/addwording","title":"var addWording: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/applicationid","title":"var applicationID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/source","title":"var source: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/friendapplicationinfo\/type","title":"var type: FriendApplicationType","type":"property"}],"path":"\/documentation\/atomicxcore\/friendapplicationinfo","title":"FriendApplicationInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gift\/coins","title":"let coins: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/desc","title":"let desc: String","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/extensioninfo","title":"let extensionInfo: [String : String]","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/giftid","title":"let giftId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/iconurl","title":"let iconURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/level","title":"let level: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/atomicxcore\/gift\/resourceurl","title":"let resourceURL: String","type":"property"}],"path":"\/documentation\/atomicxcore\/gift","title":"Gift","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftcategory\/categoryid","title":"let categoryId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/giftcategory\/desc","title":"let desc: String","type":"property"},{"path":"\/documentation\/atomicxcore\/giftcategory\/extensioninfo","title":"let extensionInfo: [String : String]","type":"property"},{"path":"\/documentation\/atomicxcore\/giftcategory\/giftlist","title":"let giftList: [Gift]","type":"property"},{"path":"\/documentation\/atomicxcore\/giftcategory\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/atomicxcore\/giftcategory","title":"GiftCategory","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftstate\/usablegifts","title":"var usableGifts: [GiftCategory]","type":"property"}],"path":"\/documentation\/atomicxcore\/giftstate","title":"GiftState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/addtime","title":"var addTime: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/applicationid","title":"var applicationID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/fromuser","title":"var fromUser: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/fromuseravatarurl","title":"var fromUserAvatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/fromusernickname","title":"var fromUserNickname: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/groupid","title":"var groupID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/handledmsg","title":"var handledMsg: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/handledresult","title":"var handledResult: GroupApplicationHandledResult?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/handledstatus","title":"var handledStatus: GroupApplicationHandledStatus?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/requestmsg","title":"var requestMsg: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/touser","title":"var toUser: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupapplicationinfo\/type","title":"var type: GroupApplicationType","type":"property"}],"path":"\/documentation\/atomicxcore\/groupapplicationinfo","title":"GroupApplicationInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmember\/init(userid:)","title":"init(userID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmember\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/ismuted","title":"var isMuted: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/muteuntil","title":"var muteUntil: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/namecard","title":"var nameCard: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/nickname","title":"var nickname: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/role","title":"var role: GroupMemberRole","type":"property"},{"path":"\/documentation\/atomicxcore\/groupmember\/userid","title":"var userID: String","type":"property"}],"path":"\/documentation\/atomicxcore\/groupmember","title":"GroupMember","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/allmembers","title":"var allMembers: [GroupMember]","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/avatarurl","title":"var avatarURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/currentuserrole","title":"var currentUserRole: GroupMemberRole","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/groupname","title":"var groupName: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/groupowner","title":"var groupOwner: GroupMember?","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/grouptype","title":"var groupType: GroupType","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/hasmoregroupmembers","title":"var hasMoreGroupMembers: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/invitetogroupapprovaltype","title":"var inviteToGroupApprovalType: GroupJoinOption","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/isallmuted","title":"var isAllMuted: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/isnotdisturb","title":"var isNotDisturb: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/ispinned","title":"var isPinned: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/joingroupapprovaltype","title":"var joinGroupApprovalType: GroupJoinOption","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/membercount","title":"var memberCount: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/notice","title":"var notice: String","type":"property"},{"path":"\/documentation\/atomicxcore\/groupsettingstate\/selfnamecard","title":"var selfNameCard: String?","type":"property"}],"path":"\/documentation\/atomicxcore\/groupsettingstate","title":"GroupSettingState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutstate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutstate\/isshowemptyseat","title":"var isShowEmptySeat: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/layoutstate\/videolayoutmode","title":"var videoLayoutMode: LayoutMode","type":"property"}],"path":"\/documentation\/atomicxcore\/layoutstate","title":"LayoutState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/likestate\/totallikecount","title":"var totalLikeCount: UInt","type":"property"}],"path":"\/documentation\/atomicxcore\/likestate","title":"LikeState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudiencestate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudiencestate\/audiencecount","title":"var audienceCount: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/liveaudiencestate\/audiencelist","title":"var audienceList: [LiveUserInfo]","type":"property"}],"path":"\/documentation\/atomicxcore\/liveaudiencestate","title":"LiveAudienceState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecanvas\/h","title":"var h: CGFloat","type":"property"},{"path":"\/documentation\/atomicxcore\/livecanvas\/templateid","title":"var templateId: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/livecanvas\/w","title":"var w: CGFloat","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livecanvas\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/livecanvas\/==(_:_:)","title":"static func == (LiveCanvas, LiveCanvas) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/livecanvas\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/livecanvas","title":"LiveCanvas","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/activitystatus","title":"static let activityStatus: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/backgroundurl","title":"static let backgroundURL: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/categorylist","title":"static let categoryList: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/coverurl","title":"static let coverURL: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/ismessagedisable","title":"static let isMessageDisable: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/ispublicvisible","title":"static let isPublicVisible: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/livename","title":"static let liveName: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/none","title":"static let none: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/notice","title":"static let notice: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/seatlayouttemplateid","title":"static let seatLayoutTemplateId: LiveInfo.ModifyFlag","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/seatmode","title":"static let seatMode: LiveInfo.ModifyFlag","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/liveinfo\/modifyflag","title":"LiveInfo.ModifyFlag","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/activitystatus","title":"var activityStatus: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/backgroundurl","title":"var backgroundURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/categorylist","title":"var categoryList: [NSNumber]","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/coverurl","title":"var coverURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/createtime","title":"var createTime: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/isgiftenabled","title":"var isGiftEnabled: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/ismessagedisable","title":"var isMessageDisable: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/ispublicvisible","title":"var isPublicVisible: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/isseatenabled","title":"var isSeatEnabled: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/keepowneronseat","title":"var keepOwnerOnSeat: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/liveid","title":"var liveId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/livename","title":"var liveName: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/liveowner","title":"var liveOwner: LiveUserInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/maxseatcount","title":"var maxSeatCount: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/metadata","title":"var metaData: [String : String]","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/notice","title":"var notice: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/seatlayouttemplateid","title":"var seatLayoutTemplateId: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/seatmode","title":"var seatMode: TakeSeatMode","type":"property"},{"path":"\/documentation\/atomicxcore\/liveinfo\/totalviewercount","title":"var totalViewerCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/liveinfo\/==(_:_:)","title":"static func == (LiveInfo, LiveInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/liveinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/liveinfo","title":"LiveInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveliststate\/currentlive","title":"var currentLive: LiveInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/liveliststate\/livelist","title":"var liveList: [LiveInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/liveliststate\/livelistcursor","title":"var liveListCursor: String","type":"property"}],"path":"\/documentation\/atomicxcore\/liveliststate","title":"LiveListState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveseatstate\/canvas","title":"var canvas: LiveCanvas","type":"property"},{"path":"\/documentation\/atomicxcore\/liveseatstate\/seatlist","title":"var seatList: [SeatInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/liveseatstate\/speakingusers","title":"var speakingUsers: [String : Int]","type":"property"}],"path":"\/documentation\/atomicxcore\/liveseatstate","title":"LiveSeatState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/avatarurl","title":"var avatarURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/userid","title":"var userId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/username","title":"var userName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/liveuserinfo\/==(_:_:)","title":"static func == (LiveUserInfo, LiveUserInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/liveuserinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/liveuserinfo","title":"LiveUserInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstate\/loginstatus","title":"var loginStatus: LoginStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/loginstate\/loginuserinfo","title":"var loginUserInfo: UserProfile?","type":"property"}],"path":"\/documentation\/atomicxcore\/loginstate","title":"LoginState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mediastate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mediastate\/bigmuteimage","title":"var bigMuteImage: UIImage?","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/iscameraopened","title":"var isCameraOpened: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/isfrontcamera","title":"var isFrontCamera: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/ismicrophonemuted","title":"var isMicrophoneMuted: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/ismicrophoneopened","title":"var isMicrophoneOpened: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/ismirrorenabled","title":"var isMirrorEnabled: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/mediastate\/smallmuteimage","title":"var smallMuteImage: UIImage?","type":"property"}],"path":"\/documentation\/atomicxcore\/mediastate","title":"MediaState","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagebody\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagebody\/custommessage","title":"var customMessage: CustomMessageInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/faceindex","title":"var faceIndex: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/facename","title":"var faceName: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/filename","title":"var fileName: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/filepath","title":"var filePath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/filesize","title":"var fileSize: Int32","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/issoundplayed","title":"var isSoundPlayed: Bool?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/largeimagepath","title":"var largeImagePath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/originalimageheight","title":"var originalImageHeight: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/originalimagepath","title":"var originalImagePath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/originalimagesize","title":"var originalImageSize: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/originalimagewidth","title":"var originalImageWidth: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/soundduration","title":"var soundDuration: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/soundpath","title":"var soundPath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/soundsize","title":"var soundSize: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/systemmessage","title":"var systemMessage: [SystemMessageInfo]?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/text","title":"var text: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/thumbimagepath","title":"var thumbImagePath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videoduration","title":"var videoDuration: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videopath","title":"var videoPath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videosize","title":"var videoSize: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videosnapshotheight","title":"var videoSnapshotHeight: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videosnapshotpath","title":"var videoSnapshotPath: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videosnapshotsize","title":"var videoSnapshotSize: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videosnapshotwidth","title":"var videoSnapshotWidth: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messagebody\/videotype","title":"var videoType: String?","type":"property"}],"path":"\/documentation\/atomicxcore\/messagebody","title":"MessageBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/newer","title":"static let Newer: MessageFetchDirection","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/older","title":"static let Older: MessageFetchDirection","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagefetchdirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/atomicxcore\/messagefetchdirection\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefetchdirection\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/atomicxcore\/messagefetchdirection\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagefetchdirection","title":"MessageFetchDirection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/direction","title":"var direction: MessageFetchDirection","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/filtertype","title":"var filterType: MessageFilterType","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/message","title":"var message: MessageInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/messageseq","title":"var messageSeq: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefetchoption\/pagecount","title":"var pageCount: UInt","type":"property"}],"path":"\/documentation\/atomicxcore\/messagefetchoption","title":"MessageFetchOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/all","title":"static let All: MessageFilterType","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/image","title":"static let Image: MessageFilterType","type":"property"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/video","title":"static let Video: MessageFilterType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagefiltertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/atomicxcore\/messagefiltertype\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/atomicxcore\/messagefiltertype\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/atomicxcore\/messagefiltertype\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagefiltertype","title":"MessageFilterType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageinfo\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageinfo\/groupid","title":"var groupID: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/isself","title":"var isSelf: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/messagebody","title":"var messageBody: MessageBody?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/messagetype","title":"var messageType: MessageType","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/msgid","title":"var msgID: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/needreadreceipt","title":"var needReadReceipt: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/progress","title":"var progress: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/quotemessageinfo","title":"var quoteMessageInfo: ReplyMessageInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/rawmessage","title":"var rawMessage: V2TIMMessage?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/reactions","title":"var reactions: [MessageReaction]","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/readcount","title":"var readCount: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/receiver","title":"var receiver: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/repliedmessagecount","title":"var repliedMessageCount: UInt","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/replymessageinfo","title":"var replyMessageInfo: ReplyMessageInfo?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/sender","title":"var sender: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/status","title":"var status: MessageStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/timestamp","title":"var timestamp: Date?","type":"property"},{"path":"\/documentation\/atomicxcore\/messageinfo\/unreadcount","title":"var unreadCount: Int","type":"property"}],"path":"\/documentation\/atomicxcore\/messageinfo","title":"MessageInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageliststate\/hasmorenewermessage","title":"var hasMoreNewerMessage: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/messageliststate\/hasmoreoldermessage","title":"var hasMoreOlderMessage: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/messageliststate\/messagelist","title":"var messageList: [MessageInfo]","type":"property"},{"path":"\/documentation\/atomicxcore\/messageliststate\/messagelistchangereason","title":"var messageListChangeReason: MessageListChangeReason","type":"property"}],"path":"\/documentation\/atomicxcore\/messageliststate","title":"MessageListState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagereaction\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/atomicxcore\/messagereaction\/reactedbymyself","title":"var reactedByMyself: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/messagereaction\/reactionid","title":"var reactionID: String","type":"property"},{"path":"\/documentation\/atomicxcore\/messagereaction\/resourcepath","title":"var resourcePath: String","type":"property"},{"path":"\/documentation\/atomicxcore\/messagereaction\/totalusercount","title":"var totalUserCount: UInt32","type":"property"}],"path":"\/documentation\/atomicxcore\/messagereaction","title":"MessageReaction","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkinfo\/delay","title":"var delay: UInt32","type":"property"},{"path":"\/documentation\/atomicxcore\/networkinfo\/downloss","title":"var downLoss: UInt32","type":"property"},{"path":"\/documentation\/atomicxcore\/networkinfo\/quality","title":"var quality: NetworkQuality","type":"property"},{"path":"\/documentation\/atomicxcore\/networkinfo\/uploss","title":"var upLoss: UInt32","type":"property"},{"path":"\/documentation\/atomicxcore\/networkinfo\/userid","title":"var userId: String","type":"property"}],"path":"\/documentation\/atomicxcore\/networkinfo","title":"NetworkInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/regioninfo\/h","title":"var h: CGFloat","type":"property"},{"path":"\/documentation\/atomicxcore\/regioninfo\/w","title":"var w: CGFloat","type":"property"},{"path":"\/documentation\/atomicxcore\/regioninfo\/x","title":"var x: CGFloat","type":"property"},{"path":"\/documentation\/atomicxcore\/regioninfo\/y","title":"var y: CGFloat","type":"property"},{"path":"\/documentation\/atomicxcore\/regioninfo\/zorder","title":"var zorder: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/regioninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/regioninfo\/==(_:_:)","title":"static func == (RegionInfo, RegionInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/regioninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/regioninfo","title":"RegionInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/messagebody","title":"var messageBody: MessageBody?","type":"property"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/messagetype","title":"var messageType: MessageType?","type":"property"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/msgabstract","title":"var msgAbstract: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/msgid","title":"var msgID: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/msgsender","title":"var msgSender: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/replymessageinfo\/msgstatus","title":"var msgStatus: MessageStatus?","type":"property"}],"path":"\/documentation\/atomicxcore\/replymessageinfo","title":"ReplyMessageInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/roomstate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/roomstate\/keepowneronseat","title":"var keepOwnerOnSeat: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/roomstate\/maxcoguestcount","title":"var maxCoGuestCount: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/roomstate\/ownerinfo","title":"var ownerInfo: TUIUserInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/roomstate\/roomid","title":"var roomId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/roomstate\/seatlayouttemplateid","title":"var seatLayoutTemplateId: Int","type":"property"}],"path":"\/documentation\/atomicxcore\/roomstate","title":"RoomState","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/seatinfo\/index","title":"var index: Int","type":"property"},{"path":"\/documentation\/atomicxcore\/seatinfo\/islocked","title":"var isLocked: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/seatinfo\/region","title":"var region: RegionInfo","type":"property"},{"path":"\/documentation\/atomicxcore\/seatinfo\/userinfo","title":"var userInfo: SeatUserInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/seatinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/seatinfo\/==(_:_:)","title":"static func == (SeatInfo, SeatInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/seatinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/seatinfo","title":"SeatInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/allowopencamera","title":"var allowOpenCamera: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/allowopenmicrophone","title":"var allowOpenMicrophone: Bool","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/avatarurl","title":"var avatarURL: String","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/camerastatus","title":"var cameraStatus: DeviceStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/liveid","title":"var liveId: String","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/microphonestatus","title":"var microphoneStatus: DeviceStatus","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/role","title":"var role: Role","type":"property"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/userid","title":"var userId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/atomicxcore\/seatuserinfo\/==(_:_:)","title":"static func == (SeatUserInfo, SeatUserInfo) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/seatuserinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/seatuserinfo","title":"SeatUserInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userprofile\/init(userid:nickname:avatarurl:)","title":"init(userID: String, nickname: String?, avatarURL: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userprofile\/allowtype","title":"var allowType: AllowType?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/avatarurl","title":"var avatarURL: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/birthday","title":"var birthday: UInt32?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/custominfo","title":"var customInfo: [String : Data]?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/gender","title":"var gender: Gender?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/level","title":"var level: UInt32?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/nickname","title":"var nickname: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/role","title":"var role: UInt32?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/selfsignature","title":"var selfSignature: String?","type":"property"},{"path":"\/documentation\/atomicxcore\/userprofile\/userid","title":"var userID: String","type":"property"}],"path":"\/documentation\/atomicxcore\/userprofile","title":"UserProfile","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userstate\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/userstate\/hasaudiostreamuserlist","title":"var hasAudioStreamUserList: Set<String>","type":"property"},{"path":"\/documentation\/atomicxcore\/userstate\/hasvideostreamuserlist","title":"var hasVideoStreamUserList: Set<String>","type":"property"},{"path":"\/documentation\/atomicxcore\/userstate\/selfinfo","title":"var selfInfo: TUIUserInfo","type":"property"}],"path":"\/documentation\/atomicxcore\/userstate","title":"UserState","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battlerequestclosure","title":"BattleRequestClosure","type":"typealias"},{"path":"\/documentation\/atomicxcore\/completionclosure","title":"CompletionClosure","type":"typealias"},{"path":"\/documentation\/atomicxcore\/liveinfocompletionclosure","title":"LiveInfoCompletionClosure","type":"typealias"},{"path":"\/documentation\/atomicxcore\/metadatacompletionclosure","title":"MetaDataCompletionClosure","type":"typealias"},{"path":"\/documentation\/atomicxcore\/stoplivecompletionclosure","title":"StopLiveCompletionClosure","type":"typealias"},{"path":"\/documentation\/atomicxcore\/tuibattlerequestblock","title":"TUIBattleRequestBlock","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/allowany","title":"case allowAny","type":"case"},{"path":"\/documentation\/atomicxcore\/allowtype\/denyany","title":"case denyAny","type":"case"},{"path":"\/documentation\/atomicxcore\/allowtype\/needconfirm","title":"case needConfirm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/fromv2timallowtype(_:)","title":"static func fromV2TIMAllowType(V2TIMFriendAllowType) -> AllowType","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/allowtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/allowtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/allowtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/allowtype","title":"AllowType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/child","title":"case child","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/cold","title":"case cold","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/ethereal","title":"case ethereal","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/fatso","title":"case fatso","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/foreigner","title":"case foreigner","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/heavymachinery","title":"case heavyMachinery","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/heavymetal","title":"case heavyMetal","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/littlegirl","title":"case littleGirl","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/man","title":"case man","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/none","title":"case none","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/strongcurrent","title":"case strongCurrent","type":"case"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/trappedbeast","title":"case trappedBeast","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/audiochangertype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audiochangertype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/audiochangertype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/audiochangertype","title":"AudioChangerType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/auditorium","title":"case auditorium","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/deep","title":"case deep","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/ktv","title":"case ktv","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/loud","title":"case loud","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/magnetic","title":"case magnetic","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/metallic","title":"case metallic","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/smallroom","title":"case smallRoom","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/audioreverbtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioreverbtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/audioreverbtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/audioreverbtype","title":"AudioReverbType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioroute\/earpiece","title":"case earpiece","type":"case"},{"path":"\/documentation\/atomicxcore\/audioroute\/speakerphone","title":"case speakerphone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioroute\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioroute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/audioroute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioroute\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/audioroute\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/audioroute\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/audioroute","title":"AudioRoute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragetype\/custom","title":"case custom","type":"case"},{"path":"\/documentation\/atomicxcore\/barragetype\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/barragetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/barragetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/barragetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/barragetype","title":"BarrageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/allmemberexit","title":"case allMemberExit","type":"case"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/timeover","title":"case timeOver","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/battleendedreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleendedreason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/battleendedreason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/battleendedreason","title":"BattleEndedReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattleended(battleinfo:reason:)","title":"case onBattleEnded(battleInfo: BattleInfo, reason: BattleEndedReason)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlerequestaccept(battleid:inviter:invitee:)","title":"case onBattleRequestAccept(battleId: String, inviter: SeatUserInfo, invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlerequestcancelled(battleid:inviter:invitee:)","title":"case onBattleRequestCancelled(battleId: String, inviter: SeatUserInfo, invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlerequestreceived(battleid:inviter:invitee:)","title":"case onBattleRequestReceived(battleId: String, inviter: SeatUserInfo, invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlerequestreject(battleid:inviter:invitee:)","title":"case onBattleRequestReject(battleId: String, inviter: SeatUserInfo, invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlerequesttimeout(battleid:inviter:invitee:)","title":"case onBattleRequestTimeout(battleId: String, inviter: SeatUserInfo, invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onbattlestarted(battleinfo:inviter:invitees:)","title":"case onBattleStarted(battleInfo: BattleInfo, inviter: SeatUserInfo, invitees: [SeatUserInfo])","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onuserexitbattle(battleid:battleuser:)","title":"case onUserExitBattle(battleId: String, battleUser: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/battleevent\/onuserjoinbattle(battleid:battleuser:)","title":"case onUserJoinBattle(battleId: String, battleUser: SeatUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/battleevent","title":"BattleEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostrequestaccepted(invitee:)","title":"case onCoHostRequestAccepted(invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostrequestcancelled(inviter:invitee:)","title":"case onCoHostRequestCancelled(inviter: SeatUserInfo, invitee: SeatUserInfo?)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostrequestreceived(inviter:extensioninfo:)","title":"case onCoHostRequestReceived(inviter: SeatUserInfo, extensionInfo: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostrequestrejected(invitee:)","title":"case onCoHostRequestRejected(invitee: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostrequesttimeout(inviter:)","title":"case onCoHostRequestTimeout(inviter: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostuserjoined(userinfo:)","title":"case onCoHostUserJoined(userInfo: SeatUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostevent\/oncohostuserleft(userinfo:)","title":"case onCoHostUserLeft(userInfo: SeatUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/cohostevent","title":"CoHostEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/hostdynamic1v6","title":"case hostDynamic1v6","type":"case"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/hostdynamicgrid","title":"case hostDynamicGrid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/cohostlayouttemplate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/cohostlayouttemplate","title":"CoHostLayoutTemplate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/disconnected","title":"case disconnected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/cohoststatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/cohoststatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/cohoststatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/cohoststatus","title":"CoHostStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/offline","title":"case offline","type":"case"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/online","title":"case online","type":"case"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/contactonlinestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contactonlinestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/contactonlinestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/contactonlinestatus","title":"ContactOnlineStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contacttype\/group","title":"case group","type":"case"},{"path":"\/documentation\/atomicxcore\/contacttype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/atomicxcore\/contacttype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contacttype\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contacttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/contacttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contacttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/contacttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/contacttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/contacttype","title":"ContactType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/notnotify","title":"case notNotify","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/notnotifyexceptmention","title":"case notNotifyExceptMention","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/notreceive","title":"case notReceive","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/notreceiveexceptmention","title":"case notReceiveExceptMention","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/receive","title":"case receive","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/conversationreceiveoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/conversationreceiveoption","title":"ConversationReceiveOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationtype\/c2c","title":"case c2c","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationtype\/group","title":"case group","type":"case"},{"path":"\/documentation\/atomicxcore\/conversationtype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationtype\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/conversationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/conversationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/conversationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/conversationtype","title":"ConversationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/coreviewtype\/playview","title":"case playView","type":"case"},{"path":"\/documentation\/atomicxcore\/coreviewtype\/pushview","title":"case pushView","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/coreviewtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/coreviewtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/coreviewtype","title":"CoreViewType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/unlockonly","title":"case unlockOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/devicecontrolpolicy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/devicecontrolpolicy","title":"DeviceControlPolicy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/deviceerror\/nodevicedetected","title":"case noDeviceDetected","type":"case"},{"path":"\/documentation\/atomicxcore\/deviceerror\/noerror","title":"case noError","type":"case"},{"path":"\/documentation\/atomicxcore\/deviceerror\/nosystempermission","title":"case noSystemPermission","type":"case"},{"path":"\/documentation\/atomicxcore\/deviceerror\/notsupportcapture","title":"case notSupportCapture","type":"case"},{"path":"\/documentation\/atomicxcore\/deviceerror\/occupiederror","title":"case occupiedError","type":"case"},{"path":"\/documentation\/atomicxcore\/deviceerror\/unknownerror","title":"case unKnownError","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/deviceerror\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/deviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/deviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/deviceerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/deviceerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/deviceerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/deviceerror","title":"DeviceError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestatus\/off","title":"case off","type":"case"},{"path":"\/documentation\/atomicxcore\/devicestatus\/on","title":"case on","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/devicestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/devicestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/devicestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/devicestatus","title":"DeviceStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/both","title":"case both","type":"case"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/received","title":"case received","type":"case"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/sent","title":"case sent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/friendapplicationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/friendapplicationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/friendapplicationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/friendapplicationtype","title":"FriendApplicationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/female","title":"case female","type":"case"},{"path":"\/documentation\/atomicxcore\/gender\/male","title":"case male","type":"case"},{"path":"\/documentation\/atomicxcore\/gender\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/fromv2timgender(_:)","title":"static func fromV2TIMGender(V2TIMGender) -> Gender","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/gender\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/gender\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/gender\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/gender","title":"Gender","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/giftevent\/onreceivegift(liveid:gift:count:sender:)","title":"case onReceiveGift(liveId: String, gift: Gift, count: UInt8, sender: LiveUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/giftevent","title":"GiftEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/agreed","title":"case agreed","type":"case"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/refused","title":"case refused","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledresult","title":"GroupApplicationHandledResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/bymyself","title":"case byMyself","type":"case"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/byother","title":"case byOther","type":"case"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/unhandled","title":"case unhandled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/groupapplicationhandledstatus","title":"GroupApplicationHandledStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/inviteapprovedbyadmin","title":"case inviteApprovedByAdmin","type":"case"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/inviteapprovedbyinvitee","title":"case inviteApprovedByInvitee","type":"case"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/joinapprovedbyadmin","title":"case joinApprovedByAdmin","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/groupapplicationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupapplicationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/groupapplicationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/groupapplicationtype","title":"GroupApplicationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/any","title":"case any","type":"case"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/auth","title":"case auth","type":"case"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/forbid","title":"case forbid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/groupjoinoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupjoinoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/groupjoinoption\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/groupjoinoption","title":"GroupJoinOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/admin","title":"case admin","type":"case"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/all","title":"case all","type":"case"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/member","title":"case member","type":"case"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/owner","title":"case owner","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/groupmemberrole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/groupmemberrole\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/groupmemberrole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/groupmemberrole","title":"GroupMemberRole","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/grouptype\/avchatroom","title":"case avChatRoom","type":"case"},{"path":"\/documentation\/atomicxcore\/grouptype\/community","title":"case community","type":"case"},{"path":"\/documentation\/atomicxcore\/grouptype\/meeting","title":"case meeting","type":"case"},{"path":"\/documentation\/atomicxcore\/grouptype\/publicgroup","title":"case publicGroup","type":"case"},{"path":"\/documentation\/atomicxcore\/grouptype\/work","title":"case work","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/grouptype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/grouptype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/grouptype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/grouptype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/grouptype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/grouptype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/grouptype","title":"GroupType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/guestevent\/onguestapplicationnoresponse(reason:)","title":"case onGuestApplicationNoResponse(reason: NoResponseReason)","type":"case"},{"path":"\/documentation\/atomicxcore\/guestevent\/onguestapplicationresponded(isaccept:hostuser:)","title":"case onGuestApplicationResponded(isAccept: Bool, hostUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/guestevent\/onhostinvitationcancelled(hostuser:)","title":"case onHostInvitationCancelled(hostUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/guestevent\/onhostinvitationreceived(hostuser:)","title":"case onHostInvitationReceived(hostUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/guestevent\/onkickedoffseat(seatindex:hostuser:)","title":"case onKickedOffSeat(seatIndex: Int, hostUser: LiveUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/guestevent","title":"GuestEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/hostevent\/onguestapplicationcancelled(guestuser:)","title":"case onGuestApplicationCancelled(guestUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/hostevent\/onguestapplicationprocessedbyotherhost(guestuser:hostuser:)","title":"case onGuestApplicationProcessedByOtherHost(guestUser: LiveUserInfo, hostUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/hostevent\/onguestapplicationreceived(guestuser:)","title":"case onGuestApplicationReceived(guestUser: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/hostevent\/onhostinvitationnoresponse(guestuser:reason:)","title":"case onHostInvitationNoResponse(guestUser: LiveUserInfo, reason: NoResponseReason)","type":"case"},{"path":"\/documentation\/atomicxcore\/hostevent\/onhostinvitationresponded(isaccept:guestuser:)","title":"case onHostInvitationResponded(isAccept: Bool, guestUser: LiveUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/hostevent","title":"HostEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/floatlayout","title":"case floatLayout","type":"case"},{"path":"\/documentation\/atomicxcore\/layoutmode\/freelayout","title":"case freeLayout","type":"case"},{"path":"\/documentation\/atomicxcore\/layoutmode\/gridlayout","title":"case gridLayout","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/layoutmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/layoutmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/layoutmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/layoutmode","title":"LayoutMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/likeevent\/onreceivelikesmessage(liveid:totallikesreceived:sender:)","title":"case onReceiveLikesMessage(liveId: String, totalLikesReceived: UInt, sender: LiveUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/likeevent","title":"LikeEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveaudienceevent\/onaudiencejoined(audience:)","title":"case onAudienceJoined(audience: LiveUserInfo)","type":"case"},{"path":"\/documentation\/atomicxcore\/liveaudienceevent\/onaudienceleft(audience:)","title":"case onAudienceLeft(audience: LiveUserInfo)","type":"case"}],"path":"\/documentation\/atomicxcore\/liveaudienceevent","title":"LiveAudienceEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/endedbyhost","title":"case endedByHost","type":"case"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/endedbyserver","title":"case endedByServer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/liveendedreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveendedreason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/liveendedreason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/liveendedreason","title":"LiveEndedReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/byadmin","title":"case byAdmin","type":"case"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/byloggedonotherdevice","title":"case byLoggedOnOtherDevice","type":"case"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/byserver","title":"case byServer","type":"case"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/forcountofjoinedroomsexceedlimit","title":"case forCountOfJoinedRoomsExceedLimit","type":"case"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/forjoinroomstatusinvalidduringoffline","title":"case forJoinRoomStatusInvalidDuringOffline","type":"case"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/fornetworkdisconnected","title":"case forNetworkDisconnected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/livekickedoutreason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livekickedoutreason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/livekickedoutreason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/livekickedoutreason","title":"LiveKickedOutReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/livelistevent\/onkickedoutoflive(liveid:reason:message:)","title":"case onKickedOutOfLive(liveId: String, reason: LiveKickedOutReason, message: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/livelistevent\/onliveended(liveid:reason:message:)","title":"case onLiveEnded(liveId: String, reason: LiveEndedReason, message: String)","type":"case"}],"path":"\/documentation\/atomicxcore\/livelistevent","title":"LiveListEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/liveseatevent\/onlocalcameraclosedbyadmin","title":"case onLocalCameraClosedByAdmin","type":"case"},{"path":"\/documentation\/atomicxcore\/liveseatevent\/onlocalcameraopenedbyadmin(policy:)","title":"case onLocalCameraOpenedByAdmin(policy: DeviceControlPolicy)","type":"case"},{"path":"\/documentation\/atomicxcore\/liveseatevent\/onlocalmicrophoneclosedbyadmin","title":"case onLocalMicrophoneClosedByAdmin","type":"case"},{"path":"\/documentation\/atomicxcore\/liveseatevent\/onlocalmicrophoneopenedbyadmin(policy:)","title":"case onLocalMicrophoneOpenedByAdmin(policy: DeviceControlPolicy)","type":"case"}],"path":"\/documentation\/atomicxcore\/liveseatevent","title":"LiveSeatEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/logined","title":"case logined","type":"case"},{"path":"\/documentation\/atomicxcore\/loginstatus\/unlogin","title":"case unlogin","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/fromv2timstatus(_:)","title":"static func fromV2TIMStatus(V2TIMLoginStatus) -> LoginStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/loginstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/loginstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/loginstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/loginstatus","title":"LoginStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageforwardtype\/merge","title":"case merge","type":"case"},{"path":"\/documentation\/atomicxcore\/messageforwardtype\/single","title":"case single","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messageforwardtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messageforwardtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messageforwardtype","title":"MessageForwardType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/deletemessage","title":"case deleteMessage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/fetchmessages","title":"case fetchMessages","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/fetchmoremessages","title":"case fetchMoreMessages","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/recvmessage","title":"case recvMessage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/sendmessage","title":"case sendMessage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagelistchangereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelistchangereason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/messagelistchangereason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagelistchangereason","title":"MessageListChangeReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelisttype\/history","title":"case history","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelisttype\/merged","title":"case merged","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelisttype\/pinned","title":"case pinned","type":"case"},{"path":"\/documentation\/atomicxcore\/messagelisttype\/replied","title":"case replied","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagelisttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagelisttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagelisttype","title":"MessageListType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/file","title":"case file","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/largeimage","title":"case largeImage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/originalimage","title":"case originalImage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/sound","title":"case sound","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/thumbimage","title":"case thumbImage","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/video","title":"case video","type":"case"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/videosnapshot","title":"case videoSnapshot","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagemediafiletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagemediafiletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/messagemediafiletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagemediafiletype","title":"MessageMediaFileType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagestatus\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/initstatus","title":"case initStatus","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/localimported","title":"case localImported","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/recalled","title":"case recalled","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/sendfail","title":"case sendFail","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/sendsuccess","title":"case sendSuccess","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/sending","title":"case sending","type":"case"},{"path":"\/documentation\/atomicxcore\/messagestatus\/violation","title":"case violation","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagestatus\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/messagestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagestatus","title":"MessageStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagetype\/custom","title":"case custom","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/face","title":"case face","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/file","title":"case file","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/sound","title":"case sound","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/system","title":"case system","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/text","title":"case text","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/atomicxcore\/messagetype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagetype\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/messagetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/messagetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/messagetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/messagetype","title":"MessageType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mirrortype\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/atomicxcore\/mirrortype\/disable","title":"case disable","type":"case"},{"path":"\/documentation\/atomicxcore\/mirrortype\/enable","title":"case enable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mirrortype\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mirrortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/mirrortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mirrortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/mirrortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/mirrortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/mirrortype","title":"MirrorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/abortwhenoccupied","title":"case abortWhenOccupied","type":"case"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/forcereplace","title":"case forceReplace","type":"case"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/swapposition","title":"case swapPosition","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/moveseatpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/moveseatpolicy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/moveseatpolicy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/moveseatpolicy","title":"MoveSeatPolicy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkquality\/bad","title":"case bad","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/down","title":"case down","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/excellent","title":"case excellent","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/good","title":"case good","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/poor","title":"case poor","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/atomicxcore\/networkquality\/verybad","title":"case veryBad","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkquality\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkquality\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/networkquality\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkquality\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/networkquality\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/networkquality\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/networkquality","title":"NetworkQuality","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/alreadyseated","title":"case alreadySeated","type":"case"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/timeout","title":"case timeout","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/noresponsereason\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/noresponsereason\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/noresponsereason\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/noresponsereason","title":"NoResponseReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/role\/admin","title":"case admin","type":"case"},{"path":"\/documentation\/atomicxcore\/role\/generaluser","title":"case generalUser","type":"case"},{"path":"\/documentation\/atomicxcore\/role\/owner","title":"case owner","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/role\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/role\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/role\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/role\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/role\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/role\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/role","title":"Role","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/cancelgroupadmin(groupid:canceladminoperator:canceladminmembersshowname:)","title":"case cancelGroupAdmin(groupID: String, cancelAdminOperator: String, cancelAdminMembersShowName: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupavatar(groupid:groupavataroperator:groupavatar:)","title":"case changeGroupAvatar(groupID: String, groupAvatarOperator: String, groupAvatar: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupintroduction(groupid:groupintroductionoperator:groupintroduction:)","title":"case changeGroupIntroduction(groupID: String, groupIntroductionOperator: String, groupIntroduction: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupmuteall(groupid:groupmutealloperator:ismuteall:)","title":"case changeGroupMuteAll(groupID: String, groupMuteAllOperator: String, isMuteAll: Bool)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupname(groupid:groupnameoperator:groupname:)","title":"case changeGroupName(groupID: String, groupNameOperator: String, groupName: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupnotification(groupid:groupnotificationoperator:groupnotification:)","title":"case changeGroupNotification(groupID: String, groupNotificationOperator: String, groupNotification: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changegroupowner(groupid:groupowneroperator:groupowner:)","title":"case changeGroupOwner(groupID: String, groupOwnerOperator: String, groupOwner: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changeinvitetogroupapproval(groupid:groupinviteapprovaloperator:groupinviteoption:)","title":"case changeInviteToGroupApproval(groupID: String, groupInviteApprovalOperator: String, groupInviteOption: GroupJoinOption)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/changejoingroupapproval(groupid:groupjoinapprovaloperator:groupjoinoption:)","title":"case changeJoinGroupApproval(groupID: String, groupJoinApprovalOperator: String, groupJoinOption: GroupJoinOption)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/invitetogroup(groupid:inviter:inviteesshowname:)","title":"case inviteToGroup(groupID: String, inviter: String, inviteesShowName: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/joingroup(groupid:joinmember:)","title":"case joinGroup(groupID: String, joinMember: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/kickedfromgroup(groupid:kickoperator:kickedmembersshowname:)","title":"case kickedFromGroup(groupID: String, kickOperator: String, kickedMembersShowName: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/mutegroupmember(groupid:mutegroupmemberoperator:isselfmuted:mutedgroupmembersshowname:mutetime:)","title":"case muteGroupMember(groupID: String, muteGroupMemberOperator: String, isSelfMuted: Bool, mutedGroupMembersShowName: String, muteTime: Int)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/pingroupmessage(groupid:pingroupmessageoperator:)","title":"case pinGroupMessage(groupID: String, pinGroupMessageOperator: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/quitgroup(groupid:quitmember:)","title":"case quitGroup(groupID: String, quitMember: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/recallmessage(groupid:recallmessageoperator:isrecalledbyself:isingroup:recallreason:)","title":"case recallMessage(groupID: String, recallMessageOperator: String, isRecalledBySelf: Bool, isInGroup: Bool, recallReason: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/setgroupadmin(groupid:setadminoperator:setadminmembersshowname:)","title":"case setGroupAdmin(groupID: String, setAdminOperator: String, setAdminMembersShowName: String)","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/atomicxcore\/systemmessageinfo\/unpingroupmessage(groupid:unpingroupmessageoperator:)","title":"case unpinGroupMessage(groupID: String, unpinGroupMessageOperator: String)","type":"case"}],"path":"\/documentation\/atomicxcore\/systemmessageinfo","title":"SystemMessageInfo","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/takeseatmode\/apply","title":"case apply","type":"case"},{"path":"\/documentation\/atomicxcore\/takeseatmode\/free","title":"case free","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/takeseatmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/takeseatmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/takeseatmode","title":"TakeSeatMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoquality\/quality1080p","title":"case quality1080P","type":"case"},{"path":"\/documentation\/atomicxcore\/videoquality\/quality360p","title":"case quality360P","type":"case"},{"path":"\/documentation\/atomicxcore\/videoquality\/quality540p","title":"case quality540P","type":"case"},{"path":"\/documentation\/atomicxcore\/videoquality\/quality720p","title":"case quality720P","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoquality\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoquality\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/videoquality\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoquality\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/videoquality\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/videoquality\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/videoquality","title":"VideoQuality","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/background","title":"case background","type":"case"},{"path":"\/documentation\/atomicxcore\/viewlayer\/foreground","title":"case foreground","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/atomicxcore\/viewlayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/atomicxcore\/viewlayer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/atomicxcore\/viewlayer\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/atomicxcore\/viewlayer","title":"ViewLayer","type":"enum"}],"path":"\/documentation\/atomicxcore","title":"AtomicXCore","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}